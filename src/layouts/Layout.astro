---
import "styles.css";
import about from "author.json";
import { SEO } from "astro-seo";
import { ViewTransitions } from "astro:transitions";

export type Props = {
  title: string;
  description?: string;
  article?: {
    date: string;
  };
  image?: string;
};

const { pathname, origin } = Astro.url;
const url = Astro.url.toString();
const isHome = pathname === "/";

const {
  title,
  article,
  description = about.bio,
  image = origin.concat("/preview.png"),
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <SEO
      title={about.name}
      charset="utf-8"
      description={description}
      twitter={{
        site: `@${about.name}`,
        creator: about.twitter,
        description,
        image,
        title,
        card: "summary_large_image",
      }}
      openGraph={{
        basic: {
          type: "Portfolio",
          title,
          url,
          image,
        },
        image: {
          url: image,
          alt: `${about.name} Portfolio`,
        },
        optional: {
          locale: "en_US",
          siteName: about.name,
          description,
        },
        ...(article && {
          article: {
            publishedTime: article.date,
            authors: [about.name],
          },
        }),
      }}
    />

    <meta name="viewport" content="width=device-width" />
    <link href="/favicon.ico" rel="icon" />
    <link href="/icon-192.png" rel="icon" type="image/png" />
    <link href="/apple-touch-icon.png" rel="apple-touch-icon" />
    <link href="/manifest.json" rel="manifest" />
    <meta content="#fff" name="theme-color" />
    <ViewTransitions />
  </head>

  <body
    class={`bg-white text-slate-800 dark:text-slate-200 dark:bg-neutral-900 min-w-[20rem] antialiased transition-colors
    ${isHome ? " flex items-center" : ""}`}
  >
    <div
      class={`w-full m-auto p-6 flex-grow flex flex-col max-w-3xl lg:max-w-4xl ${
        isHome ? "h-full max-h-[44rem]" : "min-h-full"
      }`}
    >
      <header class="relative" transition:persist>
        <a href="#skip" class="sr-only focus:not-sr-only"> Skip to content</a>
        <nav class="text-sm sm:text-base">
          <ul class="relative flex w-full list-none space-x-4 pl-0">
            <li>
              <a class="link-underline" href="/" data-astro-prefetch="viewport"
                >Home</a
              >
            </li>
            <li>
              <a
                href="/about"
                class="link-underline"
                data-astro-prefetch="viewport">About</a
              >
            </li>
            <li>
              <a
                href="/blog"
                class="link-underline"
                data-astro-prefetch="viewport">Blog</a
              >
            </li>
          </ul>
        </nav>
      </header>
      <main
        id="skip"
        class="flex flex-grow flex-col py-12"
      >
        <slot />
      </main>
      <footer
        class="mb-4 flex flex-col justify-end text-sm sm:flex-row sm:items-end sm:text-base"
        transition:persist
      >
        <ul class="flex max-w-full flex-shrink-0 flex-wrap">
          {
            about.social.map(({ name, url }) => (
              <li class="mr-4 mt-2">
                <a href={url} class="link-underline">
                  {name}
                </a>
              </li>
            ))
          }
        </ul>
      </footer>
    </div>

    <script data-astro-rerun>
      setTimeout(() => {
        if (window.location.hash) {
          const article = document.querySelector(
            `[href='${window.location.hash}']`,
          );
          if (article) {
            article.scrollIntoView();
          }
        }
      }, 0);
    </script>

    <script>
      document.addEventListener("astro:page-load", () => {
        setTimeout(() => {
          const regex = new RegExp("[^/]+(?=/$|$)") 
          const parts = regex.exec(location.pathname);
          const slug = parts === null ? 'home' : parts[0]
          
          fetch(`https://visits.emasuriano.com/api/${slug}`, { method: "POST" },
          );
        }, 5000);
      });
    </script>

    <style is:global>
      .link-underline {
        @apply relative font-semibold no-underline;
      }

      .link-underline::before {
        @apply absolute -bottom-1 left-0 block h-0.5 w-full origin-top-left scale-x-0 bg-indigo-500 transition-transform;
        content: "";
      }

      .link-underline:hover::before {
        @apply scale-x-100;
      }
    </style>
  </body>
</html>
