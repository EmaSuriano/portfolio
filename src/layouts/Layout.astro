---
import 'styles.css';
import Link from 'components/Link.astro';
import about from '../author.json';

export type Props = {
  title: string;
  type?: string;
  description?: string;
  canonical?: string;
  date?: string;
  sharingImageUrl?: string;
};

const { pathname } = Astro.url;
const url = Astro.url.toString();
const isHome = pathname === '/';

let {
  title = about.name,
  type = 'website',
  description = about.bio,
  canonical,
  date,
} = Astro.props as Props;

if (!isHome) {
  title = `${title} - ${about.name}`;
}
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta name="viewport" content="width=device-width" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta property="og:url" content={url} />
    <meta property="og:type" content={type} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:site_name" content={about.name} />
    <meta name="author" content={about.name} />
    <link href={canonical} rel="canonical" />
    {date && <meta property="article:published_time" content={date} />}
    <link href="/favicon.ico" rel="icon" />
    <link href="/favicon.png" rel="icon" type="image/png" />
    <link href="/touch-180x180.png" rel="apple-touch-icon" />
    <link href="/manifest.json" rel="manifest" />
    <meta content="#fff" name="theme-color" />
  </head>

  <body
    class={`bg-white text-slate-800 dark:text-slate-200 dark:bg-neutral-900 min-w-[20rem] antialiased
    ${isHome ? ' flex items-center' : ''}`}
  >
    <div
      class={`w-full m-auto p-6 flex-grow flex flex-col max-w-3xl lg:max-w-4xl ${
        isHome ? 'h-full max-h-[44rem]' : 'min-h-full'
      }`}
    >
      <header>
        <a href="#skip" class="sr-only focus:not-sr-only"> Skip to content</a>
        <nav class="text-sm sm:text-base">
          <ul class="flex w-full space-x-4 relative">
            {
              !isHome && (
                <li>
                  <Link href="/">Home</Link>
                </li>
              )
            }
            <li>
              <Link href="/about">About</Link>
            </li>
            <li>
              <Link href="/blog">Blog</Link>
            </li>
            <li class="absolute right-2">
              <button
                aria-label="Toggle theme"
                id="theme-button"
                class="p-0.5 text-slate-500 dark:text-slate-300 transition-colors duration-200 border-b dark:border-slate-700 dark:hover:border-current hover:border-current"
              ></button>
            </li>
          </ul>
        </nav>
      </header>
      <main id="skip" class="flex flex-col flex-grow py-12">
        <slot />
      </main>
      <footer
        class="flex mb-4 text-sm sm:text-base flex-col justify-end sm:flex-row sm:items-end"
      >
        <ul class="flex flex-wrap flex-shrink-0 max-w-full">
          {
            about.social.map(({ name, url }) => (
              <li class="mr-4 mt-2">
                <Link href={url}>{name}</Link>
              </li>
            ))
          }
        </ul>
      </footer>
    </div>

    <script is:inline>
      setTimeout(() => {
        if (window.location.hash) {
          const article = document.querySelector(
            `[href='${window.location.hash}']`,
          );
          if (article) {
            article.scrollIntoView();
          }
        }
      }, 0);
    </script>

    <script is:inline>
      const moon = `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-moon"><path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path></svg>`;
      const sun = `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-sun"><circle cx="12" cy="12" r="5"></circle><line x1="12" y1="1" x2="12" y2="3"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line><line x1="1" y1="12" x2="3" y2="12"></line><line x1="21" y1="12" x2="23" y2="12"></line><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line></svg>`;
      const themeButton = document.getElementById('theme-button');
      const browserTheme = document.querySelector('[name="theme-color"]');
      let isDark;

      const theme = (() => {
        if (
          typeof localStorage !== 'undefined' &&
          localStorage.getItem('theme')
        ) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
        return 'light';
      })();

      if (theme === 'light') {
        document.documentElement.setAttribute('data-theme', 'light');
        isDark = true;
        themeButton.innerHTML = moon;
        browserTheme.content = '#FFFFFF';
      } else {
        document.documentElement.setAttribute('data-theme', 'dark');
        isDark = false;
        themeButton.innerHTML = sun;
        browserTheme.content = '#111111';
      }

      window.localStorage.setItem('theme', theme);
      const darkModeHandler = () => {
        if (isDark) {
          document.documentElement.setAttribute('data-theme', 'dark');
          localStorage.theme = 'dark';
          isDark = false;
          themeButton.innerHTML = sun;
          browserTheme.content = '#111111';
        } else {
          document.documentElement.setAttribute('data-theme', 'light');
          localStorage.theme = 'light';
          isDark = true;
          themeButton.innerHTML = moon;
          browserTheme.content = '#FFFFFF';
        }
      };

      themeButton.addEventListener('click', darkModeHandler);
    </script>
  </body>
</html>
