---
import { getCollection } from "astro:content";
import { getPostLink, sortPostByDate } from "helpers";
import { countCommonItems } from "helpers";

type Props = {
  tags: string[];
  id: string;
};

const { tags, id } = Astro.props;

const blogPosts = (await getCollection("blog")).filter(
  (post) => !post.data.draft,
);
const tilPosts = await getCollection("til");

const relatedPosts = [...blogPosts, ...tilPosts]
  .map((post) => ({
    ...post,
    commonItems: countCommonItems(tags, post.data.tags || []),
  }))
  .filter((post) => post.id !== id && post.commonItems > 0)
  .sort((a, b) => {
    // Sort by commonItemCount in descending order
    if (b.commonItems !== a.commonItems) {
      return b.commonItems - a.commonItems;
    }

    return sortPostByDate(a, b);
  });
---

{
  relatedPosts.length > 0 && (
    <section class="block">
      <h3>Related articles</h3>
      <ul>
        {relatedPosts.map((post) => (
          <li>
            <a href={getPostLink(post)}>{post.data.title}</a>
          </li>
        ))}
      </ul>
    </section>
  )
}
