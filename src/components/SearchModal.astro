---
---

<div
  id="search-modal"
  class="fixed inset-0 z-[99999] hidden bg-black bg-opacity-50 flex items-start justify-center pt-20"
>
  <div class="bg-white dark:bg-neutral-800 rounded-lg shadow-xl w-full max-w-2xl mx-4 max-h-[80vh] overflow-hidden">
    <div id="pagefind-search" class="p-4"></div>
  </div>
</div>

<script>
  import { PagefindUI } from "@pagefind/default-ui";

  let pagefindInitialized = false;
  let selectedIndex = -1;
  let observer: MutationObserver | null = null;
  let currentHandleOpenSearch: ((e: Event) => void) | null = null;
  let currentHandleKeydown: ((e: KeyboardEvent) => void) | null = null;

  function initializeSearchModal() {
    const searchModal = document.getElementById("search-modal");
    const searchContainer = document.getElementById("pagefind-search");

    // Reset state
    pagefindInitialized = false;
    selectedIndex = -1;

    // Clear the search container
    if (searchContainer) {
      searchContainer.innerHTML = '<div class="p-4"></div>';
    }

    function initializePagefind() {
      if (pagefindInitialized || !searchContainer) return;
      
      // Clear any existing content first
      searchContainer.innerHTML = '';
      
      new PagefindUI({
        element: "#pagefind-search",
        showSubResults: true,
        showImages: false,
        excerptLength: 30,
        resetStyles: false,
      });
      
      pagefindInitialized = true;
    }

    function closeSearch() {
      searchModal?.classList.add("hidden");
      selectedIndex = -1;
    }

    function getSearchResults() {
      return document.querySelectorAll("#pagefind-search .pagefind-ui__result") || [];
    }

    function updateSelection() {
      const results = getSearchResults();
      results.forEach((result, index) => {
        const element = result as HTMLElement;
        if (index === selectedIndex) {
          element.classList.add("selected");
          element.scrollIntoView({ block: "nearest", behavior: "smooth" });
        } else {
          element.classList.remove("selected");
        }
      });
    }

    function selectResult() {
      const results = getSearchResults();
      if (selectedIndex >= 0 && selectedIndex < results.length) {
        const selectedResult = results[selectedIndex] as HTMLElement;
        const link = selectedResult.querySelector("a");
        if (link) {
          link.click();
          closeSearch();
        }
      }
    }

    // Remove existing listeners
    if (currentHandleOpenSearch) {
      document.removeEventListener("openSearch", currentHandleOpenSearch);
    }
    if (currentHandleKeydown) {
      document.removeEventListener("keydown", currentHandleKeydown);
    }

    // Listen for open search event from button
    currentHandleOpenSearch = () => {
      initializePagefind();
      selectedIndex = -1;
    };

    // Keyboard navigation
    currentHandleKeydown = (e: KeyboardEvent) => {
      // Always handle Escape
      if (e.key === "Escape") {
        closeSearch();
        return;
      }

      // Only handle other keys when search modal is open and visible
      const modalElement = document.getElementById("search-modal");
      if (!modalElement || modalElement.classList.contains("hidden")) {
        return;
      }

      // Get fresh results each time
      const results = document.querySelectorAll("#pagefind-search .pagefind-ui__result");
      
      if (e.key === "ArrowDown") {
        e.preventDefault();
        e.stopPropagation();
        selectedIndex = Math.min(selectedIndex + 1, results.length - 1);
        updateSelection();
      } else if (e.key === "ArrowUp") {
        e.preventDefault();
        e.stopPropagation();
        selectedIndex = Math.max(selectedIndex - 1, -1);
        updateSelection();
      } else if (e.key === "Enter" && selectedIndex >= 0) {
        e.preventDefault();
        e.stopPropagation();
        selectResult();
      }
    };

    document.addEventListener("openSearch", currentHandleOpenSearch);
    document.addEventListener("keydown", currentHandleKeydown);

    // Add click listener to modal (don't clone it as that breaks references)
    if (searchModal) {
      // Remove existing click listeners by cloning just the attributes
      searchModal.onclick = null;
      searchModal.addEventListener("click", (e) => {
        if (e.target === searchModal) {
          closeSearch();
        }
      });
    }

    // Reset selection when new search results appear
    if (observer) {
      observer.disconnect();
    }
    
    if (searchContainer) {
      observer = new MutationObserver(() => {
        selectedIndex = -1;
      });
      
      observer.observe(searchContainer, {
        childList: true,
        subtree: true
      });
    }
  }

  // Initialize on load
  initializeSearchModal();

  // Reinitialize on Astro navigation
  document.addEventListener("astro:page-load", initializeSearchModal);
</script>

<style>
  /* Custom styles for Pagefind */
  :global(.pagefind-ui) {
    --pagefind-ui-scale: 1;
    --pagefind-ui-primary: #4f46e5;
    --pagefind-ui-text: inherit;
    --pagefind-ui-background: transparent;
    --pagefind-ui-border: #e5e7eb;
    --pagefind-ui-tag: #f3f4f6;
    --pagefind-ui-font: inherit;
  }

  :global(.dark .pagefind-ui) {
    --pagefind-ui-text: inherit;
    --pagefind-ui-background: transparent;
    --pagefind-ui-border: #374151;
    --pagefind-ui-tag: #374151;
  }

  :global(.pagefind-ui__search-input) {
    border-radius: 0.5rem;
    border: 1px solid var(--pagefind-ui-border);
    padding: 0.75rem;
    font-size: 1rem;
    width: 100%;
    background: transparent;
    color: inherit;
  }

  :global(.pagefind-ui__search-input:focus) {
    outline: 2px solid var(--pagefind-ui-primary);
    outline-offset: -2px;
  }

  :global(.pagefind-ui__form) {
    position: relative;
  }

  :global(.pagefind-ui__search-clear) {
    display: none !important;
  }

  :global(.pagefind-ui__results) {
    max-height: 50vh;
    overflow-y: auto;
    margin-top: 1rem;
    border-radius: 0.5rem;
  }

  :global(.pagefind-ui__result) {
    padding: 1rem;
    border-radius: 0.5rem;
    margin-bottom: 0.5rem;
    border: 1px solid var(--pagefind-ui-border);
    background: transparent;
    transition: all 0.2s ease;
  }

  :global(.pagefind-ui__result:hover),
  :global(.pagefind-ui__result.selected) {
    background: #f8fafc;
    border-color: var(--pagefind-ui-primary);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  :global(.dark .pagefind-ui__result:hover),
  :global(.dark .pagefind-ui__result.selected) {
    background: #1f2937;
    border-color: var(--pagefind-ui-primary);
  }

  :global(.pagefind-ui__result-title) {
    font-weight: 600;
    font-size: 1.1rem;
    margin-bottom: 0.5rem;
    color: inherit;
  }

  :global(.pagefind-ui__result-title a) {
    text-decoration: none;
    color: inherit;
  }

  :global(.pagefind-ui__result-title a:hover) {
    color: var(--pagefind-ui-primary);
  }

  :global(.pagefind-ui__result-excerpt) {
    font-size: 0.9rem;
    line-height: 1.5;
    color: #6b7280;
    margin-bottom: 0.5rem;
  }

  :global(.dark .pagefind-ui__result-excerpt) {
    color: #9ca3af;
  }

  :global(.pagefind-ui__result-tags) {
    display: flex;
    flex-wrap: wrap;
    gap: 0.25rem;
    margin-top: 0.5rem;
  }

  :global(.pagefind-ui__result-tag) {
    background: var(--pagefind-ui-tag);
    padding: 0.125rem 0.5rem;
    border-radius: 9999px;
    font-size: 0.75rem;
    color: #6b7280;
  }

  :global(.dark .pagefind-ui__result-tag) {
    color: #9ca3af;
  }

  :global(.pagefind-ui__message) {
    padding: 1rem;
    text-align: center;
    color: #6b7280;
    font-style: italic;
  }

  :global(.dark .pagefind-ui__message) {
    color: #9ca3af;
  }

  /* Scrollbar styling */
  :global(.pagefind-ui__results::-webkit-scrollbar) {
    width: 6px;
  }

  :global(.pagefind-ui__results::-webkit-scrollbar-track) {
    background: transparent;
  }

  :global(.pagefind-ui__results::-webkit-scrollbar-thumb) {
    background: #d1d5db;
    border-radius: 3px;
  }

  :global(.dark .pagefind-ui__results::-webkit-scrollbar-thumb) {
    background: #4b5563;
  }
</style>